function BoardBreak(pill, board) {

	/*

	// amount to search (4 makes a break)

	let hor = 4
	let ver = 4


	/*
		// NO NEED FOR ADJUSTING FOR VER/HOR, BOARD WILL ARLEADY BE FILLED 
	if (pill.position == 'Right' || pill.position == 'left') {
		hor -= 1
	}
	else {
		ver -= 1
	}
	

	// make a break list coming from head and one coming from tail

	let break1 = []
	let temp1 = []

	// if position up/down switch head/tail

	if (position = )

	for (let i = pill.head.y; i < 13; ++i) {

		if (board.array[i][pill.head.x].typeFill == pill.headColor) {
			console.log('reacheddd')
			temp1.push([i, pill.head.x])
			ver -= 1
		}

		else {
			if (ver <= 0) {
				break1.push(temp1)
			}
			break
		}

	}
	




	console.log(break1)

	*/
	// check everything, not just else if because a lot could break

	// looking at the right
	/*
	let check1 = 0
	let arr1 = []
	for (let i = pill.head.x; i < 7; ++i) {

		if (board.array[pill.head.y][i].typeFill == pill.headColor) {
			arr1.push(board.array[pill.head.y][i])
		}

	}
	*/

///// this is probably even more tedious
/*
	let breakList = []
	for (let i = 0; i < board.array.length; ++i) {
		for (let j = 0; j < board.array[i].length; ++j) {

			let tempHor = []
			for (k = 0; k < 7; ++ k) {
				
				if (board.array[i][k].typeFill == 

			}

			let tempVer = []
			for (l = 0; l < 13; ++l) {
				1 + 1
				console.log('here')

			}


		}
	}
*/






}